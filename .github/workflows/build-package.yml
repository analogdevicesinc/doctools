on:
  workflow_call:
    outputs:
      asset_alias_name:
        value: ${{ jobs.build.outputs.asset_alias_name}}
      asset_path:
        value: ${{ jobs.build.outputs.asset_path}}
      new_tag:
        value: ${{ jobs.build.outputs.new_tag}}
      tag:
        value: ${{ jobs.build.outputs.tag}}

permissions:
  contents: read

jobs:
  build:
    runs-on: [self-hosted, v1]

    outputs:
      asset_alias_name: ${{ steps.get_asset.outputs.asset_alias_name }}
      asset_path: ${{ steps.get_asset.outputs.asset_path }}
      new_tag: ${{ steps.get_new_tag.outputs.new_tag }}
      tag: ${{ steps.get_tag.outputs.tag }}

    steps:
    - uses: analogdevicesinc/doctools/checkout@action

    - name: Install bundler dependencies
      run: >-
        npm install
        rollup
        @rollup/plugin-terser
        sass

    - name: Bundle web scripts
      run: >-
        node_modules/.bin/rollup -c
        ci/rollup.config.app.mjs

    - name: Bundle web styles
      run: >-
        node_modules/.bin/sass
        adi_doctools/theme/cosmic/style/app.bundle.scss:adi_doctools/theme/cosmic/static/app.min.css
        adi_doctools/theme/cosmic/style/extra.bundle.scss:adi_doctools/theme/cosmic/static/extra.min.css
        --style compressed

    - name: Fetch third-party fonts
      run: |
        ./ci/fetch-fonts.sh

    - name: Get tag
      id: get_tag
      run: |
        tag=v$(sed -n 's/^__version__ = "\(.*\)"/\1/p' */__init__.py)
        echo "tag=$tag" >> "$GITHUB_OUTPUT"
        echo "tag=$tag" >> "$GITHUB_ENV"

    - name: Get if new tag
      id: get_new_tag
      if: github.ref == 'refs/heads/main'
      run: |
        git fetch --tags --prune --prune-tags --force
        if ! [ $(git tag -l "${{ env.tag }}") ] ; then
          echo "new_tag=true" >> "$GITHUB_OUTPUT"
          echo "new_tag=true" >> "$GITHUB_ENV"
        fi

    - name: Create dirty tag with git sha
      if: ${{ env.new_tag != 'true' }}
      run: >
        sha=$(echo $GITHUB_SHA | cut -c 1-12) ;
        sed -i "s/^__version__ = \"\([^\"]*\)\"/__version__ = \"\1+git.$sha\"/" \
          */__init__.py

    - name: Build a binary wheel and a source tarball
      run: |
        python3.13 -m venv venv/3.13/build-package
        source ./venv/3.13/build-package/bin/activate
        pip3.13 install build
        python3.13 -m build

    - name: Get asset name
      id: get_asset
      run: |
        asset_alias_name=$(sed -n 's/^name = "//p' pyproject.toml | sed 's/"$//')
        echo "asset_alias_name=$asset_alias_name.tar.gz" >> "$GITHUB_OUTPUT"
        asset_path=$(find dist/ -maxdepth 1 -name "*.tar.gz" -print -quit)
        echo "asset_path=$asset_path" >> "$GITHUB_OUTPUT"

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
