FROM opensuse/leap:16.0

ENV runner_labels=v2
ARG runner_version=2.328.0
ARG runner_version_sha=01066fad3a2893e63e6ca880ae3a1fad5bf9329d60e77ee15f2b97c148c3cd4e
ARG bashrc=https://raw.githubusercontent.com/analogdevicesinc/doctools/refs/heads/ci/bashrc
ARG entrypoint_sh=https://raw.githubusercontent.com/analogdevicesinc/doctools/refs/heads/ci/entrypoint.sh

RUN zypper install -y --no-recommends \
    tar gzip curl jq libicu coreutils

RUN useradd -m runner

USER runner
RUN mkdir -p /home/runner/actions-runner
WORKDIR /home/runner/actions-runner

RUN curl -o actions-runner.tar.gz -L https://github.com/actions/runner/releases/download/v${runner_version}/actions-runner-linux-x64-${runner_version}.tar.gz && \
    echo "${runner_version_sha} actions-runner.tar.gz" | sha256sum -c && \
    tar xzf actions-runner.tar.gz

USER root

#core: wget make git openssl ca-certificates ca-certificates-mozilla
#gh-actions: nodejs npm-default
#packaging: unzip
#weasyprint: libpango fontconfig lato-fonts
RUN zypper install -y --no-recommends \
    wget make git git-lfs openssl openssl-devel ca-certificates ca-certificates-mozilla \
    nodejs npm-default \
    unzip xz \
    libpango-1_0-0 fontconfig lato-fonts

RUN update-ca-certificates
RUN fc-cache -f && fc-list
RUN npm config set fund false

COPY install-python.sh .
RUN chmod +x install-python.sh ; \
    ./install-python.sh \
        3.13.2 \
        3.13 \
        4c2d9202ab4db02c9d0999b14655dfe5
RUN chmod +x install-python.sh ; \
    ./install-python.sh \
        3.8.20 \
        3.8 \
        745478c81d6382cf46b5e7ad89e56008

RUN mkdir -p /usr/local/bin
WORKDIR /usr/local/bin
ADD ${entrypoint_sh} .
RUN chmod +rx entrypoint.sh

RUN git config --add --system user.name "CSE CI" ; \
    git config --add --system user.email "cse-ci-notifications@analog.com" ; \
    git config --add --system init.defaultBranch  "__runner_init_branch" ; \
    git config --add --system advice.mergeConflict false ; \
    git config --add --system advice.detachedHead false ; \
    git config --add --system fetch.prune true ; \
    git config --add --system fetch.pruneTags true ; \
    git config --add --system safe.directory '*'

USER runner
WORKDIR /home/runner
RUN curl -o .bashrc -L ${bashrc} ; \
    chmod +x .bashrc

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

